import{b as m,Y as w,c as y,o as Q,w as s,d as C,f as c,a as t,a3 as p,a0 as x,t as E,l as o,ag as S,Q as q,e as f,j as n,ah as P,Z as U}from"./index-lAEU-3ZN.js";import{Q as B,a as D,b as N,C as L,t as M,f as _}from"./date-utils-BSPpnmBn.js";import{u as A,Q as $}from"./task-store-kCJIp0wi.js";import{Q as I}from"./QPage-eCB9bOON.js";import{u as O}from"./use-quasar-DlnkSLdv.js";import"./QList-CRb-0MPY.js";import"./QLinearProgress-BjU2gNSe.js";import"./format-Cw3Ttr5_.js";const J={__name:"TasksPage",setup(h){const u=A(),v=C(),b=O(),T=[{name:"title",label:"Title",field:"title",sortable:!0},{name:"description",label:"Description",field:"description",sortable:!0},{name:"status",label:"Status",field:"status",sortable:!0},{name:"dueDate",label:"Due Date",field:"dueDate",sortable:!0},{name:"actions",label:"Actions",field:"actions",sortable:!1}],d=m(!1),e=m({}),k=i=>{e.value={...i},e.value.dueDate&&(e.value.dueDateTime=M(e.value.dueDate)),d.value=!0},g=async()=>{if(new Date(e.value.dueDateTime)<new Date){b.notify({type:"negative",message:"Due date cannot be in the past"});return}const a={title:e.value.title,description:e.value.description,status:e.value.status,dueDate:_(e.value.dueDateTime)};try{await u.updateTask(e.value.id,a),d.value=!1}catch(r){console.error("Error updating task:",r)}},V=()=>{v.push("/dashboard/tasks/add")};return w(()=>{u.fetchTasks()}),(i,l)=>(Q(),y(I,{class:"q-pa-md"},{default:s(()=>[l[6]||(l[6]=c("div",{class:"text-h5 q-mb-md"},"My Tasks",-1)),t(B,{rows:p(u).tasks,columns:T,"row-key":"id",flat:"",bordered:"",title:"Task List"},{"body-cell-actions":s(a=>[t(D,{align:"right"},{default:s(()=>[t(o,{dense:"",flat:"",color:"primary",icon:"edit",onClick:r=>k(a.row)},null,8,["onClick"]),t(o,{dense:"",flat:"",color:"negative",icon:"delete",onClick:r=>p(u).deleteTask(a.row.id)},null,8,["onClick"])]),_:2},1024)]),"body-cell-status":s(a=>[t(D,{props:a},{default:s(()=>[t(N,{color:a.row.status==="COMPLETED"?"green":"orange",align:"center",class:"q-pa-sm text-white",rounded:""},{default:s(()=>[x(E(a.row.status),1)]),_:2},1032,["color"])]),_:2},1032,["props"])]),_:1},8,["rows"]),t(o,{label:"Add Task",color:"primary",class:"q-mt-md",onClick:V}),t(S,{modelValue:d.value,"onUpdate:modelValue":l[4]||(l[4]=a=>d.value=a)},{default:s(()=>[t(q,{style:{"min-width":"400px"}},{default:s(()=>[t(f,null,{default:s(()=>[...l[5]||(l[5]=[c("div",{class:"text-h6"},"Edit Task",-1)])]),_:1}),t(f,{class:"q-gutter-md"},{default:s(()=>[t(n,{modelValue:e.value.title,"onUpdate:modelValue":l[0]||(l[0]=a=>e.value.title=a),label:"Title",filled:""},null,8,["modelValue"]),t(n,{modelValue:e.value.description,"onUpdate:modelValue":l[1]||(l[1]=a=>e.value.description=a),label:"Description",type:"textarea",filled:""},null,8,["modelValue"]),t($,{modelValue:e.value.status,"onUpdate:modelValue":l[2]||(l[2]=a=>e.value.status=a),options:["PENDING","COMPLETED"],label:"Status",filled:""},null,8,["modelValue"]),t(n,{modelValue:e.value.dueDateTime,"onUpdate:modelValue":l[3]||(l[3]=a=>e.value.dueDateTime=a),label:"Due Date & Time",type:"datetime-local",filled:"",required:""},null,8,["modelValue"])]),_:1}),t(P,{align:"right"},{default:s(()=>[U(t(o,{flat:"",label:"Cancel"},null,512),[[L]]),t(o,{color:"primary",label:"Save",onClick:g})]),_:1})]),_:1})]),_:1},8,["modelValue"])]),_:1}))}};export{J as default};
